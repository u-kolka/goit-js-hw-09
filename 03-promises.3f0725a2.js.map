{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAC/BC,iBAAiB,UAQxB,SAAoBC,GAClBA,EAAEC,iBAMF,IAJA,IAAIC,EAAQC,OAAOH,EAAEI,OAAOC,SAASC,MAAMC,OACvCC,EAAOL,OAAOH,EAAEI,OAAOC,SAASG,KAAKD,OACrCE,EAASN,OAAOH,EAAEI,OAAOC,SAASI,OAAOF,OAEpCG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BC,EAAcD,EAAGR,GAAOU,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUR,EAAKO,EAALP,MAC1CS,EAAApB,GAASqB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANZ,EAAM,MAAKa,GACzEC,QAAMC,IAAI,uBAAwCH,OAAfJ,EAAS,QAAYI,OAANZ,EAAM,M,IAE3DgB,OAAM,SAAAT,G,IAAGC,EAAQD,EAARC,SAAUR,EAAKO,EAALP,MAClBS,EAAApB,GAASqB,OAAOO,QAAQ,sBAAuCL,OAAfJ,EAAS,QAAYI,OAANZ,EAAM,MAAKa,GACxEC,QAAMC,IAAI,sBAAqCH,OAAfJ,EAAS,QAAYI,OAANZ,EAAM,M,IAEvDJ,GAASM,C,IAtBb,IAAMW,EAAU,CACdK,cAAc,EACdC,SAAS,EACTC,kBAAmB,YAuBrB,SAASf,EAAcG,EAAUR,GAC/B,OAAO,IAAIqB,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACpCC,YAAW,WACPH,EACFF,EAAQ,CAAEd,WAAUR,UAEpBuB,EAAO,CAAEf,WAAUR,S,GAElBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEL = document.querySelector('.form');\nformEL.addEventListener('submit', submitForm);\n\nconst options = {\n  clickToClose: true,\n  useIcon: false,\n  cssAnimationStyle: 'from-top',\n};\n\nfunction submitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(e.target.elements.delay.value);\n  let step = Number(e.target.elements.step.value);\n  let amount = Number(e.target.elements.amount.value);\n\n  for (let i = 0; i <= amount; i++) {\n    createPromise(i, delay).then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, options);\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, options);\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n  } else {\n      reject({ position, delay });\n  }\n    }, delay);\n  })\n}"],"names":["$iU1Pc","parcelRequire","document","querySelector","addEventListener","e","preventDefault","delay1","Number","target","elements","delay","value","step","amount","i","$ce04d3a99e08e73b$var$createPromise","then","param","position","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$options","console","log","catch","failure","clickToClose","useIcon","cssAnimationStyle","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.3f0725a2.js.map"}